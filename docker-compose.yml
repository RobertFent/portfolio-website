services:
  stackzero:
    image: ghcr.io/robertfent/stackzero:production
    container_name: stackzero
    ports:
      - 3000:3000
    env_file: .env
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      - ./app:/stackzero/app
      - ./static:/stackzero/static
      - ./data:/stackzero/data
      # - ./core:/stackzero/core # enable this line after copying content of the folder to local machine to overwrite core logic manually
    restart: unless-stopped

  migrate-stackzero:
    image: ghcr.io/robertfent/stackzero:production
    container_name: migrate-stackzero
    entrypoint: ["npm", "run", "migrate"]
    env_file: .env
    volumes:
      - ./data:/stackzero/data

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - certs:/etc/nginx/certs:ro # persist and manage TLS certs
      - vhost_data:/etc/nginx/vhost.d # needed for dynamic config overrides
      - html_data:/usr/share/nginx/html # required for ACME HTTP-01 challenge
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: unless-stopped

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-acme
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      # - ACME_CA_URI=https://acme-staging-v02.api.letsencrypt.org/directory # use this for debugging tls challenge
    volumes:
      - certs:/etc/nginx/certs
      - html_data:/usr/share/nginx/html
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx-proxy
    restart: unless-stopped

volumes:
  certs:
  html_data:
  vhost_data:
  acme:
